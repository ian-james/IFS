{
    "tools": [
         {
            "displayName": "GCC Diagnostics",
            "description": "Identifies errors and warnings from the GNU Compiler Collection.",
            "technicalDesc": "A Python script that checks C/C++ compilation with the GNU Compiler Collection",
            "author": "Jamey Fraser",
            "copyright": "Copyright © 2017",
            "license": "ISC License",
            "licenseFile": "./tools/programmingTools/c_tools/LICENSE.txt",
            "progName": "./tools/programmingTools/c_tools/gccParser.py",
            "cmdToolName": "gcc",
            "runType": "programming",
            "route": "",
            "filesAllowed": "zipFile",
            "parseCmd": "",
            "defaultArg": "",
            "fileArgs": "-d",
            "options":  [
                {
                    "displayName": "Language standard (std)",
                    "type": "select",
                    "name": "opt-gccLanguageStd",
                    "values": [ "c99", "gnu99", "c11", "gnu11", "c89", "gnu89"],
                    "arg": "-s",
                    "params": ""
                },
                {
                    "displayName": "Custom compiler flags",
                    "type": "text",
                    "name": "opt-gccCompilerFlags",
                    "placeholder": "ex. -lm -lncurses -DX_OPENSOURCE",
                    "values": "",
                    "arg": "-f"
                },
                {
                    "displayName": "Standard warnings (-Wall)",
                    "type": "checkbox",
                    "name": "opt-gccLanguageWarningAll",
                    "values": "",
                    "arg": "-f -Wall ",
                    "params": ""
                },
                {
                    "displayName": "Extra warnings (-Wextra)",
                    "type": "checkbox",
                    "name": "opt-gccLanguageExtraWarning",
                    "values": "",
                    "arg": "-f -Wextra",
                    "params": ""
                },
                {
                    "displayName": "Use strict pedantic warning (-pedantic)",
                    "type": "checkbox",
                    "name": "opt-gccLanguagePendantic",
                    "values": "",
                    "arg": "-f -pedantic",
                    "params": ""
                },
                {
                    "displayName": "Treat warnings as errors (-pedantic-errors)",
                    "type": "checkbox",
                    "name": "opt-gccLanguagePendanticToError",
                    "values": "",
                    "arg": "-f -pedantic-errors",
                    "params": ""
                }
            ]
        },
        {
            "displayName": "Clang Diagnostics",
            "description": "Identifies errors and warnings from the Clang C compiler. These errors and warnings are often more readable than those from GCC.",
            "technicalDesc": "A Python script that checks C/C++ compilation with the Clang compiler.",
            "author": "Jamey Fraser",
            "copyright": "Copyright © 2017",
            "license": "ISC License",
            "licenseFile": "./tools/programmingTools/c_tools/LICENSE.txt",
            "progName": "./tools/programmingTools/c_tools/clangParser.py",
            "cmdToolName": "clang",
            "runType": "programming",
            "route": "",
            "filesAllowed": "zipFile",
            "parseCmd": "",
            "defaultArg": "",
            "fileArgs": "-d",
            "options":  [
                {
                    "displayName": "Language standard (std)",
                    "type": "select",
                    "name": "opt-clangLanguageStd",
                    "values": [ "c99", "gnu99", "c11", "gnu11", "c89", "gnu89"],
                    "arg": "-s",
                    "params": ""
                },
                {
                    "displayName": "Custom compiler flags",
                    "type": "text",
                    "name": "opt-clangCompilerFlags",
                    "placeholder": "ex. -lm -lncurses, -D_XOPENSOURCE",
                    "values": "",
                    "arg": "-f"
                },
                {
                    "displayName": "Standard warnings (-Wall)",
                    "type": "checkbox",
                    "name": "opt-clangLanguageWarningAll",
                    "values": "",
                    "arg": "-f -Wall ",
                    "params": ""
                },
                {
                    "displayName": "Extra warnings (-Wextra)",
                    "type": "checkbox",
                    "name": "opt-clangLanguageExtraWarning",
                    "values": "",
                    "arg": "-f -Wextra",
                    "params": ""
                },
                {
                    "displayName": "Use strict pedantic warnings (-pedantic)",
                    "type": "checkbox",
                    "name": "opt-clangLanguagePendantic",
                    "values": "",
                    "arg": "-f -pedantic",
                    "params": ""
                },
                {
                    "displayName": "Treat warnings as errors (-pedantic-errors)",
                    "type": "checkbox",
                    "name": "opt-clangLanguagePendanticToError",
                    "values": "",
                    "arg": "-f -pedantic-errors",
                    "params": ""
                }
            ]
        },
        {
            "displayName": "Code Quality Checker",
            "description": "Identifies potential problems with C code, beyond what the compiler is able to identify.",
            "technicalDesc": "A Python script that checks C/C++ code for errors using Cppcheck.",
            "author": "Jamey Fraser",
            "copyright": "Copyright © 2017",
            "license": "ISC License",
            "licenseFile": "./tools/programmingTools/c_tools/LICENSE.txt",
            "progName": "./tools/programmingTools/c_tools/cppcheckParser.py",
            "cmdToolName": "cppCheck",
            "runType": "programming",
            "route": "",
            "filesAllowed": "zipFile",
            "parseCmd": "",
            "defaultArg": "",
            "fileArgs": "-d",
            "options":  [
                {
                    "displayName": "Error types",
                    "type": "select",
                    "name": "opt-cppCheckErrorLevel",
                    "values": [ "all", "error", "warning", "style","performance"],
                    "arg": "-e",
                    "params": ""
                },
                {
                    "displayName": "CppCheck language standard (std)",
                    "type": "select",
                    "name": "opt-cppCheckLanguageStd",
                    "values": [ "c99","c11","c89"],
                    "arg": "-s",
                    "params": ""
                },
                {
                    "displayName": "Inconclusive warnings",
                    "type": "checkbox",
                    "name": "opt-cppCheckUseInconclusive",
                    "values": "",
                    "arg": "-f --inconclusive",
                    "params": ""
                },
                {
                    "displayName": "Suppress missing include warnings",
                    "type": "checkbox",
                    "name": "opt-cppCheckSuppressMissingInclude",
                    "values": "",
                    "arg": "-f --suppress=missingInclude",
                    "params": ""
                },
                {
                    "displayName": "Suppress unused function warnings",
                    "type": "checkbox",
                    "name": "opt-cppCheckSuppressUnusedFunction",
                    "values": "",
                    "arg": "-f --suppress=unusedFunction",
                    "params": ""
                }
            ]
        },
        {
           "displayName": "#Include Path Checker",
           "description": "Finds and reports instances of absolute/relative hardcoded #include paths.",
           "technicalDesc": "A Python script that checks .c or .h files for bsolute/relative hardcoded #include paths. Only file names are to be included.",
           "author": "John Harmer",
           "copyright": "Copyright © 2018",
           "license": "ISC License",
           "licenseFile": "./tools/programmingTools/c_tools/LICENSE.txt",
           "progName": "./tools/programmingTools/c_tools/includecheck.py",
           "cmdToolName": "includecheck",
           "runType": "programming",
           "route": "",
           "filesAllowed": "zipFile",
           "parseCmd": "",
           "defaultArg": "-t includecheck",
           "fileArgs": "-d",
           "options":  [

           ]
       },
	   {
            "displayName": "Statistics",
            "description": "Identifies certain characteristics about a piece of code and gathers statistics.",
            "technicalDesc": "A Python script that checks C/C++ code for gathering statistics",
            "author": "Nicholas Domenichini",
            "copyright": "Copyright © 2018",
            "license": "ISC License",
            "licenseFile": "./tools/programmingTools/c_stats/LICENSE.txt",
            "progName": "./tools/programmingTools/c_stats/stats.py",
            "cmdToolName": "stats",
            "runType": "programming",
            "route": "",
            "filesAllowed": "zipFile",
            "parseCmd": "",
            "defaultArg": "",
            "fileArgs": "-d",
            "options":  [
                {
                    "displayName": "Count total number of lines",
                    "type": "checkbox",
                    "name": "opt-countTotalLines",
                    "values": "",
                    "arg": "-t totalLines",
                    "params": ""
                },
                {
                    "displayName": "Count total number of comments",
                    "type": "checkbox",
                    "name": "opt-countTotalComments",
                    "values": "",
                    "arg": "-c totalComments",
                    "params": ""
                }
            ]
        },
        {
            "displayName": "Python Formatting",
            "description": "Finds errors in python files",
            "technicalDesc": "A Python script that checks with a python linter",
            "author": "Grant Douglas",
            "copyright": "Copyright © 2018",
            "license": "ISC License",
            "licenseFile": "./tools/programmingTools/python_tools/LICENSE.txt",
            "progName": "./tools/programmingTools/python_tools/pythonParser.py",
            "cmdToolName": "pycodestyle",
            "runType": "programming",
            "route": "",
            "filesAllowed": "zipFile",
            "parseCmd": "",
            "defaultArg": "-t pycodestyle",
            "fileArgs": "-d",
            "options":  [
                {
                    "displayName": "Language standard (python3, python2)",
                    "type": "select",
                    "name": "opt-pythonStandard",
                    "values": [ "python3"],
                    "arg": "-s",
                    "params": ""
                },
                {
                    "displayName": "Number of formatting errors",
                    "type": "checkbox",
                    "name": "opt-pycodestyleErrCount",
                    "values": "",
                    "arg": "",
                    "params": ""
                }

            ]
        }
    ]
}
